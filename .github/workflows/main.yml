name: Cypress Tests

on:
  push:
    branches:
      - main # Ana branch'e push yapıldığında çalışsın

jobs:
  cypress-tests:
    runs-on: ubuntu-latest # CI işlemi için Ubuntu kullanacağız

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB_NAME }}
          POSTGRES_USER: ${{ secrets.PG_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.PG_USER }}"
          --health-interval=10s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 # Repo'yu checkout yapıyoruz

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2 # Docker kurulumu

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose # Docker Compose kurulumunu güncelliyoruz

      - name: Build Docker Compose services
        run: docker-compose -f docker-compose.yml build # Docker Compose hizmetlerini build ediyoruz

      - name: Start Docker Compose services
        run: docker-compose -f docker-compose.yml up -d # Hizmetleri başlatıyoruz (detached mode)

      - name: Wait for PostgreSQL to be ready
        run: |
          docker exec -T databaseBook pg_isready -U ${{ secrets.PG_USER }} # PostgreSQL servisi hazır olana kadar bekliyoruz

      - name: Run Cypress tests
        run: docker-compose -f docker-compose.yml run cypress npx cypress run --headless --browser chrome # Cypress testlerini başlatıyoruz

      - name: Shutdown Docker Compose services
        run: docker-compose -f docker-compose.yml down # Docker Compose servislerini kapatıyoruz


      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "18"

      # - name: Install dependencies
      #   working-directory: frontend
      #   run: npm install

      # - name: Start Vite dev server
      #   working-directory: frontend
      #   run: |
      #     npm run dev & # Starta servern i bakgrunden
      #     sleep 10      # Vänta i 10 sekunder så att servern hinner starta

      # - name: Run Cypress E2E tests
      #   working-directory: frontend
      #   run: npm run test --spec 'cypress/e2e/**/*'

      # - name: Run Cypress Component Tests
      #   working-directory: frontend
      #   run: npm run test --component
