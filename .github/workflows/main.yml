name: Run Cypress Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd=`pg_isready -U postgres`
          --health-interval=30s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set secrets as environment variables
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Wait for PostgreSQL to be ready
        run: |
          docker compose exec database pg_isready -U ${{ secrets.DB_USER }}
          sleep 30

      - name: Set up Docker Compose
        run: |
          docker compose up --build -d database
          docker compose up --build -d backend
          docker compose up --build -d frontend

      - name: Wait for services to be ready
        run: |
          docker compose ps
          docker compose exec database pg_isready -U postgres
          sleep 30

      - name: Run Cypress tests
        run: docker compose run --rm cypress
      - name: Run Cypress E2E tests
        working-directory: frontend
        run: npm run test --spec 'cypress/e2e/**/*' # Kör E2E-tester

      # Steg 7: Kör komponenttester med Cypress
      - name: Run Cypress Component Tests
        working-directory: frontend
        run: npm run test --component # Kör komponenttester

      - name: Stop and remove containers
        run: |
          docker compose down

# https://docs.github.com/en/actions/use-cases-and-examples/using-containerized-services/creating-postgresql-service-containers
