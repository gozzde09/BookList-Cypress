name: Run Cypress Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=30s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Set up containers
        run: docker compose up --build -d

      - name: Wait for services to be ready
        run: |
          docker compose exec database pg_isready -U ${{ secrets.DB_USER }}
          sleep 30

      - name: Run Cypress tests
        run: docker compose run --rm cypress
# https://docs.github.com/en/actions/use-cases-and-examples/using-containerized-services/creating-postgresql-service-containers
