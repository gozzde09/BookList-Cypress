name: Cypress Tests

on:
  push:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    services:
    postgres:
      image: postgres:latest
      env:
        POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
        POSTGRES_DB: ${{ secrets.DB_NAME }}
        POSTGRES_USER: ${{ secrets.DB_USER }}
      options: >-
        --health-cmd="pg_isready -U ${{ secrets.DB_USER }}"
        --health-interval=10s
        --health-retries=5
        --health-start-period=30s
        --health-timeout=5s
      ports:
        - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose environment
        run: |
          docker-compose -f docker-compose.yml up -d

      # - name: Build Docker Compose services
      #   run: docker compose build

      - name: Wait for services to become healthy
        run: |
          docker compose ps &
          sleep 30

      - name: Install dependencies
        run: docker compose run cypress sh -c "rm -rf node_modules && npm ci"

        # Steg 6: Kör End-to-End (E2E) tester med Cypress
      # - name: Run Cypress E2E tests
      #   working-directory: frontend
      #   run: npm run test --spec 'cypress/e2e/**/*'

      # # Steg 7: Kör komponenttester med Cypress
      # - name: Run Cypress Component Tests
      #   working-directory: frontend
      #   run: npm run test --component

      - name: Run Cypress Tests
        run: |
          docker-compose run --rm cypress

      - name: Stop and remove containers
        run: |
          docker-compose down
